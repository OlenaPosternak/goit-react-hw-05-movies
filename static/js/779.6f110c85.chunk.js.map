{"version":3,"file":"static/js/779.6f110c85.chunk.js","mappings":"qRACaA,EAAWC,EAAAA,EAAAA,GAAH,8EAKRC,EAAYD,EAAAA,EAAAA,IAAH,4DAKTE,EAASF,EAAAA,EAAAA,EAAH,iE,SC+BnB,EAlCgB,SAAC,GAAc,EAAZG,MAAa,IACtBC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAoCE,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8EACE,KACEC,EAAAA,EAAAA,IAAeN,GAAIO,MAAK,SAAAC,GAAI,OAAIJ,EAAcI,EAAKC,QAAvB,GAG7B,CAFC,MAAOC,GACPC,QAAQC,IAAIF,EACb,CALH,4CADc,uBAAC,WAAD,wBAQdG,EACD,GAAE,CAACV,EAAYH,KAGd,UAACH,EAAD,YACE,0BAAKM,EAAWW,OAAS,GAApB,WAAL,OACCX,EAAWW,OAAS,EACjBX,EAAWY,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASjB,EAApB,EAAoBA,GAApB,OACb,UAACL,EAAD,YACE,UAACG,EAAD,sBAAiBkB,MACjB,uBAAIC,MAFSjB,EADF,IAMf,oDAGT,C,mMClCKkB,EAAU,mCAKT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBC,EAAAA,GAAAA,IAAA,qCAAwCF,IAF5D,cAEGG,EAFH,yBAGIA,EAASb,MAHb,gCAKH,IAAIc,MAAM,aALP,gFASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAmCC,GAAnC,gGAEoBJ,EAAAA,GAAAA,IAAA,+BACGF,EADH,iCACmCM,EADnC,gCAFpB,cAEGH,EAFH,yBAKIA,EAASb,MALb,gCAOH,IAAIc,MAAM,aAPP,gFAWA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA4BzB,GAA5B,gGAEoBoB,EAAAA,GAAAA,IAAA,gBACZpB,EADY,oBACEkB,EADF,oBAFpB,cAEGG,EAFH,yBAKIA,EAASb,MALb,gCAOH,IAAIc,MAAM,aAPP,gFAWA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA2B1B,GAA3B,gGAEoBoB,EAAAA,GAAAA,IAAA,gBACZpB,EADY,4BACUkB,EADV,oBAFpB,cAEGG,EAFH,yBAKIA,EAASb,MALb,gCAOH,IAAIc,MAAM,aAPP,gFAWA,SAAehB,EAAtB,+CAAO,OAAP,oBAAO,WAA8BN,GAA9B,gGAEoBoB,EAAAA,GAAAA,IAAA,gBACZpB,EADY,4BACUkB,EADV,2BAFpB,cAEGG,EAFH,yBAKIA,EAASb,MALb,gCAOH,IAAIc,MAAM,aAPP,gFA9CPF,EAAAA,GAAAA,SAAAA,QAAyB,8B","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","fetchAPI.js"],"sourcesContent":["import styled from '@emotion/styled';\nexport const ListItem = styled.li`\n  display: block;\n  border-bottom: 1px solid black;\n`;\n\nexport const Container = styled.div`\n  padding-top: 15px;\n  gap: 30px;\n`;\n\nexport const Author = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n`;\n","import PropTypes from 'prop-types';\n\nimport { getReviewsByID } from '../../fetchAPI';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { ListItem, Container, Author } from './Reviews.styled';\n\nconst Reviews = ({ state }) => {\n  const { id } = useParams();\n  const [allReviews, setAllReviews] = useState([]);\n\n  useEffect(() => {\n    async function getReviews() {\n      try {\n        getReviewsByID(id).then(data => setAllReviews(data.results));\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getReviews();\n  }, [allReviews, id]);\n\n  return (\n    <Container>\n      <h3>{allReviews.length > 0 && `Reviews:`} </h3>\n      {allReviews.length > 0\n        ? allReviews.map(({ author, content, id }) => (\n            <ListItem key={id}>\n              <Author>Author: {author}</Author>\n              <p>{content}</p>\n            </ListItem>\n          ))\n        : 'There are no reviews here yet. Try again later!'}\n    </Container>\n  );\n};\n\nReviews.propTypes = {\n  state: PropTypes.object,\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = '457f80f59e5c5ed289022502f172a9f5';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\n// Робота с backend\n\nexport async function fetchTrending() {\n  try {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    new Error('Not Found');\n  }\n}\n\nexport async function fetchFilteredMovies(query) {\n  try {\n    const response = await axios.get(\n      `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n    return response.data;\n  } catch (error) {\n    new Error('Not Found');\n  }\n}\n\nexport async function getMovieByID(id) {\n  try {\n    const response = await axios.get(\n      `movie/${id}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    new Error('Not Found');\n  }\n}\n\nexport async function getCastByID(id) {\n  try {\n    const response = await axios.get(\n      `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    new Error('Not Found');\n  }\n}\n\nexport async function getReviewsByID(id) {\n  try {\n    const response = await axios.get(\n      `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return response.data;\n  } catch (error) {\n    new Error('Not Found');\n  }\n}\n"],"names":["ListItem","styled","Container","Author","state","id","useParams","useState","allReviews","setAllReviews","useEffect","getReviewsByID","then","data","results","error","console","log","getReviews","length","map","author","content","API_KEY","fetchTrending","axios","response","Error","fetchFilteredMovies","query","getMovieByID","getCastByID"],"sourceRoot":""}