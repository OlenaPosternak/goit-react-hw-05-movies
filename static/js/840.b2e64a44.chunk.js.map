{"version":3,"file":"static/js/840.b2e64a44.chunk.js","mappings":"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","sources":["fetchAPI.js","pages/MovieDetails.styled.js","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '457f80f59e5c5ed289022502f172a9f5';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\n// Робота с backend\n\nexport async function fetchTrending() {\n  try {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    new Error('Not Found');\n  }\n}\n\nexport async function fetchFilteredMovies(query) {\n  try {\n    const response = await axios.get(\n      `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n    return response.data;\n  } catch (error) {\n    new Error('Not Found');\n  }\n}\n\nexport async function getMovieByID(id) {\n  try {\n    const response = await axios.get(\n      `movie/${id}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    new Error('Not Found');\n  }\n}\n\nexport async function getCastByID(id) {\n  try {\n    const response = await axios.get(\n      `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    new Error('Not Found');\n  }\n}\n\nexport async function getReviewsByID(id) {\n  try {\n    const response = await axios.get(\n      `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return response.data;\n  } catch (error) {\n    new Error('Not Found');\n  }\n}\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  padding: 20px;\n`;\n\nexport const SmallContainer=styled.div`\ntext-align:center;`\n\nexport const MainInfo = styled.div`\n  display: flex;\n  gap: 40px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n`;\n\nexport const MovieDescripton = styled.div`\n  padding-right: 20px;\n`;\n\nexport const Line = styled.div`\n  width: 100%;\n  height: 2px;\n  background-color: 0px 4px 4px rgba(0, 0, 0, 0.15), #333c4e;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n`;\n\nexport const BackButton = styled.button`\n  width: 150px;\n  padding: 5px;\n  border-radius: 4px;\n  outline: none;\n  border: none;\n  background-color: teal;\n  font-size: 16px;\n  color: white;\n`;\n\nexport const AdditionalInfoItem = styled.li`\n  margin-bottom: 10px;\n  list-style: none;\n`;\n\nexport const AdditionalInfoLink = styled(Link)`\n  text-decoration: none;\n  color: black;\n  cursor: pointer;\n\n  :hover,\n  :focus {\n    background-color: teal;\n    color: white;\n    border-radius: 4px;\n  }\n`;\n","import { Suspense } from 'react';\n\nimport { useParams, Link, useLocation, Outlet } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieByID } from '../fetchAPI';\n\nimport {\n  Container,\n  MainInfo,\n  MovieDescripton,\n  Line,\n  BackButton,\n  AdditionalInfoItem,\n  AdditionalInfoLink,\n  SmallContainer\n} from './MovieDetails.styled';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { TiStarFullOutline } from 'react-icons/ti';\nimport { BiBody } from 'react-icons/bi';\nimport { Loader } from 'components/Loader';\n\nconst IMG = `https://cdn.pixabay.com/photo/2021/12/29/17/34/girl-6902365_1280.png`;\n\nconst MovieInfo =()=> {\n  const { id } = useParams();\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  const [genres, setGenres] = useState([]);\n  const [picture, setPicture] = useState('');\n  const [movie, setMovie] = useState(null);\n \n  useEffect(() => {\n    async function getMovie() {\n      try {\n        getMovieByID(id).then(data => {\n          if (!data) {\n            toast.warn(\n              'There is no movie with such name. Please Go Back and try another one.',\n              {\n                theme: 'dark',\n              }\n            );\n            return;\n          }\n          setMovie(data);\n          setGenres(data.genres);\n          setPicture(data.poster_path);\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getMovie();\n  }, [id]);\n\n  return (\n    <Container>\n      <Link to={backLinkHref}>\n        <BackButton>Go Back 🔙 </BackButton>\n      </Link>\n      {movie ? (\n        <>\n          <MainInfo>\n            <img\n              src={\n                picture\n                  ? `https://image.tmdb.org/t/p/w500/${picture}`\n                  : `${IMG}`\n              }\n              alt={movie.title}\n              width=\"350\"\n            />\n            <MovieDescripton>\n              <h1>\n                {movie.title}(\n                {movie.release_date && movie.release_date.slice(0, 4)})\n              </h1>\n\n              <p>User Score: {Math.round(Number(movie.popularity))}% </p>\n              <h2>Overview</h2>\n              <p>{movie.overview}</p>\n              <h2>Genres</h2>\n              {genres.length !== 0 &&\n                genres.map(gen => (\n                  <span key={gen.id}>\n                    {' '}\n                    <span>{gen.name}</span>\n                  </span>\n                ))}\n            </MovieDescripton>\n          </MainInfo>\n          <Line />\n          <SmallContainer>\n            <h3>Additional Information</h3>\n            <ul>\n              <AdditionalInfoItem>\n                <AdditionalInfoLink to=\"cast\" state={location.state}>\n                  <BiBody size=\"16px\" /> Cast{' '}\n                </AdditionalInfoLink>\n              </AdditionalInfoItem>\n              <AdditionalInfoItem>\n                <AdditionalInfoLink to=\"reviews\" state={location.state}>\n                  {' '}\n                  <TiStarFullOutline size=\"16px\" /> Reviews{' '}\n                </AdditionalInfoLink>\n              </AdditionalInfoItem>\n            </ul>\n\n            <Line />\n          </SmallContainer>\n        </>\n      ) : (\n        <div>\n          There is no movie with such name. Please Go Back and try another one.{' '}\n        </div>\n      )}\n      <ToastContainer autoClose={3000} closeOnClick />\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </Container>\n  );\n};\n\nexport default MovieInfo;"],"names":["API_KEY","fetchTrending","axios","response","data","Error","fetchFilteredMovies","query","getMovieByID","id","getCastByID","getReviewsByID","Container","styled","SmallContainer","MainInfo","MovieDescripton","Line","BackButton","AdditionalInfoItem","AdditionalInfoLink","Link","useParams","location","useLocation","backLinkHref","state","from","useState","genres","setGenres","picture","setPicture","movie","setMovie","useEffect","then","poster_path","toast","theme","error","console","log","getMovie","to","src","alt","title","width","release_date","slice","Math","round","Number","popularity","overview","length","map","gen","name","size","autoClose","closeOnClick","Suspense","fallback","Loader"],"sourceRoot":""}