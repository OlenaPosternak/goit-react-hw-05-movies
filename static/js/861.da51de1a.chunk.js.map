{"version":3,"file":"static/js/861.da51de1a.chunk.js","mappings":"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","sources":["fetchAPI.js","components/SerchForm/Search.styled.js","components/SerchForm/Search.jsx","components/SearchedMovies/SearchedMovies.styled.js","components/SearchedMovies/SearchedMovies.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '457f80f59e5c5ed289022502f172a9f5';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\n// Робота с backend\n\nexport async function fetchTrending() {\n  try {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    new Error('Not Found');\n  }\n}\n\nexport async function fetchFilteredMovies(query) {\n  try {\n    const response = await axios.get(\n      `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n    return response.data;\n  } catch (error) {\n    new Error('Not Found');\n  }\n}\n\nexport async function getMovieByID(id) {\n  try {\n    const response = await axios.get(\n      `movie/${id}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    new Error('Not Found');\n  }\n}\n\nexport async function getCastByID(id) {\n  try {\n    const response = await axios.get(\n      `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    new Error('Not Found');\n  }\n}\n\nexport async function getReviewsByID(id) {\n  try {\n    const response = await axios.get(\n      `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return response.data;\n  } catch (error) {\n    new Error('Not Found');\n  }\n}\n","import styled from '@emotion/styled';\nexport const Form = styled.form`\n  margin: 20px;\n  display: flex;\n  justify-content: center;\n`;\n\nexport const Input = styled.input`\n  margin-right: 5px;\n  outline: none;\n  width: 200px;\n  height: 35px;\n\n  :not(:placeholder-shown) {\n    line-height: 1.25;\n    color: black;\n    font-size: 20px;\n  }\n`;\n\nexport const SearchBtn = styled.button`\n  height: 40px;\n  width: 100px;\n  font-size: 20px;\n  display: inline-block;\n  padding: 5px;\n  border-radius: 4px;\n  outline: none;\n  border: none;\n  background-color: teal;\n  color: white;\n\n  :hover,\n  :focus {\n    background-color: darkslategray;\n    cursor: pointer;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Form, Input, SearchBtn } from './Search.styled';\n\nexport const SearchForm = ({ onSearch }) => {\n  const handelSubmit = event => {\n    event.preventDefault();\n\n    const form = event.currentTarget;\n    const searchValue = form.elements.searchMovie.value;\n\n    if (searchValue.trim() === ``) {\n      return;\n    }\n\n    onSearch(searchValue);\n\n    // form.reset();  - використати, якщо необхідно очистити інпут\n  };\n\n  return (\n    <Form action=\"submit\" onSubmit={handelSubmit}>\n      <Input type=\"text\" name=\"searchMovie\" placeholder=\"Search film\" />\n      <SearchBtn>Search</SearchBtn>\n    </Form>\n  );\n};\n\nSearchForm.propTypes = {\n  onSearch: PropTypes.func,\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  margin: 0;\n  justify-content: center;\n`;\n\nexport const FilmLink = styled(Link)`\n  text-decoration: none;\n  font-size: 24px;\n  display: inline-block;\n  color: black;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const FilmItem = styled.li`\n  margin: 0;\n  padding: 0;\n  width: 350px;\n  text-align: center;\n  list-style: none;\n  border: 1px solid #212121;\n  border-radius: 5px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  list-style: none;\n\n  :hover,\n  :focus {\n    background-color: teal;\n    color: white;\n    border-radius: 4px;\n  }\n`;\n\nexport const Image = styled.img`\n  width: 350px;\n  height: 525px;\n  display: block;\n  max-width: 100%;\n`;\n","import PropTypes from 'prop-types';\nimport { FilmLink, FilmItem, Image, Container } from './SearchedMovies.styled';\n\nconst IMG = `https://cdn.pixabay.com/photo/2021/12/29/17/34/girl-6902365_1280.png`;\n\nexport const SearchedMovies = ({ listOFfilms, state }) => {\n  return (\n      <Container>\n        {listOFfilms.map(({ id, title, poster_path }) => (\n          <FilmItem key={id}>\n            <FilmLink to={`${id}`} state={state}>\n              <Image\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                    : `${IMG}`\n                }\n                alt={title}\n                width=\"200\"\n              />\n              <p>{title}</p>\n            </FilmLink>\n          </FilmItem>\n        ))}\n      </Container>\n  );\n};\n\nSearchedMovies.propTypes = {\n  listOFfilms: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n    })\n  ),\n  state: PropTypes.object,\n};\n","import { Suspense, useState, useEffect } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\n\nimport { SearchForm } from '../components/SerchForm/Search';\nimport { SearchedMovies } from '../components/SearchedMovies/SearchedMovies';\nimport { fetchFilteredMovies } from '../fetchAPI';\nimport { Loader } from '../components/Loader';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Movies = () => {\n  const [films, setFilms] = useState([]);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('name') ?? '';\n\n  const location = useLocation();\n\n  useEffect(() => {\n    if (movieName !== ``) {\n      async function filterMovies() {\n        try {\n          fetchFilteredMovies(movieName).then(data => {\n            if (data.results.length === 0) {\n              toast.warn('Please try another movie name!', {\n                theme: 'dark',\n              });\n            }\n            setFilms(data.results);\n          });\n        } catch (error) {\n          console.log(error);\n        }\n      }\n      filterMovies();\n    }\n  }, [movieName]);\n\n  const onSubmitSerach = name => {\n    if (name !== movieName) {\n      setFilms([]);\n    }\n\n    const nextParams = name !== '' ? { name } : {};\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <>\n      <Suspense fallback={<Loader />}>\n        <SearchForm onSearch={onSubmitSerach} />\n        <Link state={{ from: `/movies/${searchParams}` }}>\n          <SearchedMovies listOFfilms={films} state={{ from: location }} />\n        </Link>\n        <ToastContainer autoClose={3000} closeOnClick />\n      </Suspense>\n    </>\n  );\n};\n\n\n\nexport default Movies;\n"],"names":["API_KEY","fetchTrending","axios","response","data","Error","fetchFilteredMovies","query","getMovieByID","id","getCastByID","getReviewsByID","Form","styled","Input","SearchBtn","SearchForm","onSearch","action","onSubmit","event","preventDefault","searchValue","currentTarget","elements","searchMovie","value","trim","type","name","placeholder","Container","FilmLink","Link","FilmItem","Image","SearchedMovies","listOFfilms","state","map","title","poster_path","to","src","alt","width","useState","films","setFilms","useSearchParams","searchParams","setSearchParams","movieName","get","location","useLocation","useEffect","filterMovies","then","results","length","toast","theme","error","console","log","Suspense","fallback","Loader","from","autoClose","closeOnClick"],"sourceRoot":""}